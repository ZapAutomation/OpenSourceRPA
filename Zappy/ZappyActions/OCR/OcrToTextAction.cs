using System;
using System.ComponentModel;
using Zappy.SharedInterface;
using Zappy.SharedInterface.Helper;

namespace Zappy.ZappyActions.OCR
{
    [Serializable]
    [Description("Gets Text From OCR ")]
    public class OcrToTextAction : TemplateAction
    {
        public OcrToTextAction()
        {
            Language = "eng";
            PageSegmentation = 3;
            AdditionalArguments = "";
        }

        [Category("Input")]
        [Description("Image path")]
        public DynamicProperty<string> ImagePath { get; set; }

        [DefaultValue("eng")]
        [Category("Optional")]
        [Description("Enter language,default language is English, use jpn for japanase, pol for polish")]
        public DynamicProperty<string> Language { get; set; }

        [Description("0    Orientation and script detection (OSD) only.\r\n  " +
                     "1    Automatic page segmentation with OSD.\r\n  2   " +
                     " Automatic page segmentation, but no OSD, or OCR.\r\n  " +
                     "3    Fully automatic page segmentation, but no OSD. (Default)\r\n" +
                     "  4    Assume a single column of text of variable sizes.\r\n " +
                     " 5    Assume a single uniform block of vertically aligned text.\r\n  " +
                     "6    Assume a single uniform block of text.\r\n  " +
                     "7    Treat the image as a single text line.\r\n  " +
                     "8    Treat the image as a single word.\r\n  " +
                     "9    Treat the image as a single word in a circle.\r\n " +
                     "10    Treat the image as a single character.\r\n " +
                     "11    Sparse text. Find as much text as possible in no particular order.\r\n " +
                     "12    Sparse text with OSD.\r\n " +
                     "13    Raw line. Treat the image as a single text line, bypassing hacks that are Tesseract-specific.")]
        [Category("Optional")]

        public DynamicProperty<int> PageSegmentation { get; set; }

        [Category("Optional")]
        [Description("Additional arguments https://tesseract-ocr.github.io/tessdoc/Command-Line-Usage.html#simplest-invocation-to-ocr-an-image")]
        public DynamicProperty<string> AdditionalArguments { get; set; }

        [Description("Specify the path of Output Text or get autogenerated path")]
        [Category("Optional")]
        public string Path { get; set; }

        [Category("Output")]
        [Description("Gets Text from document")]
        public string Text { get; set; }

        [Category("Output")]
        [Description("Gets Text from document")]
        public string ConsoleOutput { get; set; }

        public override void Invoke(IZappyExecutionContext context, ZappyTaskActionInvoker actionInvoker)
        {

            //Image myImage = Image.FromFile(ImagePath);
            //Bitmap bmp = (Bitmap)myImage;

            ProcessImageUsingTessaract processImageUsingTessaract = new ProcessImageUsingTessaract();
            Text =
                processImageUsingTessaract.ProcessFileExternalTesseractEngine
                    (ImagePath, Language, PageSegmentation, Path, AdditionalArguments);
            ConsoleOutput = processImageUsingTessaract.ConsoleOutput;
        }

        public override string AuditInfo()
        {
            return base.AuditInfo() + " ImagePath:" + this.ImagePath + " Language:" + this.Language + " OcrOutputText:" + this.Text + " Output Path:" + this.Path;
        }
    }
}
